---
# Configure Apache Tomcat

- name: Verify whether the tomcat has been already configured by existance of catalina executable
  stat:
    path: "$CATALINA_HOME/bin/catalina.sh"
  register: catalina_executable

- name: Download Apache Tomcat {{ tomcat_dir }}
  get_url:
    url: "{{ tomcat_download_url }}"
    dest: /tmp/{{ tomcat_archive_name }}
  when: catalina_executable.stat.exists == False

- name: Create Apache Tomcat home directory {{ tomcat_home_dir }}
  file:
    name: "{{ tomcat_home_dir }}"
    state: directory
  when: catalina_executable.stat.exists == False

- name: Extract downloaded Apache Tomcat archive, /tmp/{{ tomcat_archive_name }} > "{{ tomcat_root_dir }}"
  unarchive:
    src: /tmp/{{ tomcat_archive_name }}
    dest: "{{ tomcat_root_dir }}"
    copy: no
  when: catalina_executable.stat.exists == False

- name: Add group {{ tomcat_user_group }}
  group:
    name: "{{ tomcat_user_group }}"
  when: catalina_executable.stat.exists == False

- name: Add new user {{ tomcat_user }}
  user:
    name: "{{ tomcat_user }}"
    group: "{{ tomcat_user_group }}"
    home: "{{ tomcat_home_dir }}"
    createhome: no
  become: True
  become_method: sudo
  when: catalina_executable.stat.exists == False

- name: Stop Apache Tomcat server if any server is running
  command: catalina stop
  ignore_errors: yes

- name: Wait for Tomcat server to get shut down
  wait_for:
    host: 0.0.0.0
    port: "{{ tomcat_server_port }}"
    state: stopped
    timeout: 10
  ignore_errors: yes

- name: Set CATALINA_HOME to {{ tomcat_home_dir }}
  become_method: sudo
  become: yes
  lineinfile:
    dest: "/etc/environment"
    state: "present"
    regexp: "^CATALINA_HOME"
    line: CATALINA_HOME={{ tomcat_home_dir }}

- name: Set CATALINA_BASE to {{ tomcat_home_dir }}
  become_method: sudo
  become: yes
  lineinfile:
    dest: "/etc/environment"
    state: "present"
    regexp: "^CATALINA_BASE"
    line: CATALINA_BASE={{ tomcat_home_dir }}

- name: Add catalina as a configurable alternative
  become_method: sudo
  become: yes
  alternatives:
    name: catalina
    link: "/usr/bin/catalina"
    path: "{{ tomcat_home_dir }}/bin/catalina.sh"
  when: catalina_executable.stat.exists == False

- name: Copy Apache Tomcat user roles configuration file, tomcat-users.xml > {{ tomcat_home_dir }}/conf/tomcat-users.xml
  copy:
    src: "tomcat-users.xml"
    dest: "{{ tomcat_home_dir }}/conf/tomcat-users.xml"

- name: Start Apache Tomcat application server from {{ tomcat_home_dir }}
  shell: cd $CATALINA_HOME/bin/ && nohup /usr/bin/catalina start
  register: ps

- debug: var=ps.stdout_lines


- name: Wait for Apache Tomcat server to be started, poll Tomcat server port {{ tomcat_server_port }}
  wait_for:
    host: 0.0.0.0
    port: "{{ tomcat_server_port }}"
    state: started
    timeout: 60

- name: Cleanup temporary files, rm /tmp/{{ tomcat_archive_name }}
  become_method: sudo
  file:
    path: /tmp/{{ tomcat_archive_name }}
    state: absent
